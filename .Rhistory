p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[length(p2_sample),]
sigma2_bar = p2_sample$Volatility
gamma_index = p2_sample$T.te-35+1
sigma_p2 = sqrt(sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])*15/
(
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2*(31-15)
)
sigma_p2
sigma_p2 = sqrt(sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
(
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2*(31-15)
)
sigma_p2
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
gamma_index = p2_sample$T.te-35+1
gamma_index
p2_sample
p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[length(p2_sample),]
p2_sample
p2_sample = option[option$te-option$t==31,]
p2_sample
p2_sample = p2_sample[length(p2_sample),]
p2_sample
p1_sample = option[option$te-option$t==15,]
p1_sample
p1_sample = p1_sample[length(p1_sample),]
p2_sample
option = read.csv("Options_2.csv",header = TRUE)
gamma = read.csv("gamma.csv",header = TRUE)
lambda = read.csv("lambda.csv",header = TRUE)
option = option[1:7]
p1_sample = option[option$te-option$t==15,]
p1_sample = p1_sample[nrow(p1_sample),]
p1_sample
option = read.csv("Options_2.csv",header = TRUE)
gamma = read.csv("gamma.csv",header = TRUE)
lambda = read.csv("lambda.csv",header = TRUE)
option = option[1:7]
p1_sample = option[option$te-option$t==15,]
p1_sample = p1_sample[nrow(p1_sample),]
sigma1_bar = p1_sample$Volatility
gamma_index = p1_sample$T.te-35+1
sigma_p1 = sigma1_bar/sqrt(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])
sigma_p1
p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[nrow(p2_sample),]
sigma2_bar = p2_sample$Volatility
gamma_index = p2_sample$T.te-35+1
gamma_index
p2_sample
sigma_p2 = sqrt(sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
(
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2*(31-15)
)
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2*(31-15)
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2*(31-15)
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3])^2*lambda[2,2]))^2*(31-15)
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3])^2
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2]))^2
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2
*(31-15)
(31-15)
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
sigma_p2 = sqrt(sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
)
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
sigma2_bar^2
sigma_p1
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2
sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2
p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2
*(31-15)
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
sigma_p2 = sqrt((sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15)/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
)
sigma_p2
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
brent$period
brent
i=1
j=1
brent[brent==groupped[[i]][j]$t+1 & brent==groupped[[i]][j]$Expiry]
groupped[[i]][j]$t
groupped[[i]]
groupped[[i]][1]
groupped[[i]][1,]
groupped[[i]][1,]$t
groupped[[i]][j,]$t+1
brent==groupped[[i]][j,]$t+1
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry]
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,]
next_step
log 0
log 1
log(1)
log(3)
i=3
j=2
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1]
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,]
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1.]
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][2,]
i=1000
j=2
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
i=1000
j=1
brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
temp = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
is.na(temp)
sum(temp)
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
interval=NULL
interval=c(abs(diff(brent[brent$period==unique_period[i],1])),NA)
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],interval)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$Value=NA
else
groupped[[i]][j,]$Value = diff(log(next_step$Value) - log(groupped[[i]][j,]$Value))
}
}
i=1
interval=NULL
interval=c(abs(diff(brent[brent$period==unique_period[i],1])),NA)
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],interval)
len = length(groupped[[i]])
j=1
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$Value=NA
else
groupped[[i]][j,]$Value = diff(log(next_step$Value) - log(groupped[[i]][j,]$Value))
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
next_step
next_step$Value
diff(log(next_step$Value) - log(groupped[[i]][j,]$Value)
)
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
interval=NULL
interval=c(abs(diff(brent[brent$period==unique_period[i],1])),NA)
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],interval)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$Value=NA
else
groupped[[i]][j,]$Value = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
groupped[[1]]
i=1
len = length(groupped[[i]])
j=6
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
next_step
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
i=1
j=1
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
groupped[[i]][j,]$ln_diff = NA
groupped[[i]][j,]
i
j
groupped[[i]][j,]
groupped[[1]]
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
groupped
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
i=1
j=1
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
groupped[[i]][j,]
groupped[[i]][j,]$ln_diff =1
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
ln_diff = seq(0,length(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
groupped[[0]]
groupped[[1]]
i=1
j=6
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
next_step
log(next_step$Value) - log(groupped[[i]][j,]$Value)
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
groupped[[1]]
i=1
ln_diff = seq(0,length(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
ln_diff = seq(0,length(groupped[[i]]))
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(0,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
i=1
groupped[[i]]=brent[brent$period==unique_period[i],]
groupped[[1]]
ln_diff = seq(0,nrow(groupped[[i]]))
ln_diff
i=1
ln_diff = seq(0,nrow(groupped[[i]]))
ln_diff
nrow(groupped[[1]])
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(0,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(0,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
}
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(1,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = length(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
groupped[[1]]
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(1,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = nrow(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
groupped[[1]]
library(rlist)
library(reshape2)
library(openxlsx)
data = NULL
brent = read.csv("combined.csv",header=TRUE)
brent$period = brent$Expiry - brent$t
unique_period = unique(brent$period)
#exclude 0
unique_period = unique_period[unique_period!=0]
unique_period = sort(unique_period)
groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)){
groupped[[i]]=brent[brent$period==unique_period[i],]
ln_diff = seq(1,nrow(groupped[[i]]))
groupped[[i]]=cbind(brent[brent$period==unique_period[i],],ln_diff)
len = nrow(groupped[[i]])
for (j in 1:len){
next_step = brent[brent$t==groupped[[i]][j,]$t+1 & brent$Expiry==groupped[[i]][j,]$Expiry,][1,]
if (is.na(sum(next_step)))
groupped[[i]][j,]$ln_diff = NA
else
groupped[[i]][j,]$ln_diff = log(next_step$Value) - log(groupped[[i]][j,]$Value)
}
}
filtered_groupped = vector("list",length(unique_period))
for (i in 1:length(unique_period)) {
filtered_groupped[[i]] = groupped[[i]][!is.na(groupped[[i]]$ln_diff),]
}
delta = NULL
for (i in 1:length(unique_period))
amount[i] = nrow(filtered_groupped[[i]])
tau = 35:45
amount[tau]
min(amount[tau])
filtered_groupped[tau]
tau = 35:45
#assumed delta t = 1
for (i in 1:length(tau)){
delta=cbind(delta,filtered_groupped[[tau[i]]]$ln_diff[1:11]/1)
}
c = cov(delta)
c
result=eigen(c)
result
gamma = result$vectors
lambda = result$values
cumsum(result$values/sum(result$values))
cumsum(result$values/sum(result$values))
write.csv(file="gamma.csv",gamma)
write.csv(file="lambda.csv",lambda)
option = read.csv("Options_2.csv",header = TRUE)
gamma = read.csv("gamma.csv",header = TRUE)
lambda = read.csv("lambda.csv",header = TRUE)
option = option[1:7]
p1_sample = option[option$te-option$t==15,]
p1_sample = p1_sample[nrow(p1_sample),]
sigma1_bar = p1_sample$Volatility
gamma_index = p1_sample$T.te-35+1
sigma_p1 = sigma1_bar/sqrt(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])
sigma_p1
p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[nrow(p2_sample),]
sigma2_bar = p2_sample$Volatility
gamma_index = p2_sample$T.te-35+1
sigma_p2 = sqrt((sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15)/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
)
sigma_p2
p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[nrow(p2_sample),]
sigma2_bar = p2_sample$Volatility
sigma2_bar
(sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*15)
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])^2*(31-15)
gamma[gamma_index,2]^2*lambda[1,2]
gamma[gamma_index,2]^2
gamma[gamma_index,2]^2
gamma[gamma_index,2]^2*lambda[1,2]
lambda[1,2]
p2_sample = option[option$te-option$t==31,]
p2_sample = p2_sample[nrow(p2_sample),]
sigma2_bar = p2_sample$Volatility
gamma_index = p2_sample$T.te-35+1
sigma_p2 = sqrt((sigma2_bar^2*31-sigma_p1^2*(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])*15)/
(gamma[gamma_index,2]^2*lambda[1,2]+gamma[gamma_index,3]^2*lambda[2,2])*(31-15)
)
sigma_p2
sigma_p1
